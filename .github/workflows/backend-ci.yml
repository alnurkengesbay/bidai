name: Backend — Build & Publish Docker image

on:
  push:
    branches: [ main ]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-backend:latest
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-backend:${{ github.sha }}

      - name: Image info
        run: |
          echo "Published images:"
          echo ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-backend:latest
          echo ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-backend:${{ github.sha }}

  deploy-to-render:
    needs: build-and-publish
    runs-on: ubuntu-latest
    steps:
      - name: Notify Render to deploy image
        env:
          IMAGE_TAG: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-backend:${{ github.sha }}
        run: |
          if [ -z "${{ secrets.RENDER_API_KEY }}" ] || [ -z "${{ secrets.RENDER_SERVICE_ID }}" ]; then
            echo "RENDER_API_KEY or RENDER_SERVICE_ID not set — skipping Render deploy";
            exit 0;
          fi
          RENDER_API_KEY='${{ secrets.RENDER_API_KEY }}'
          RENDER_SERVICE_ID='${{ secrets.RENDER_SERVICE_ID }}'
          echo "Triggering Render deploy for $IMAGE_TAG"
          curl -s -X POST "https://api.render.com/deploy/svc/$RENDER_SERVICE_ID" \
            -H "Authorization: Bearer $RENDER_API_KEY" \
            -H "Content-Type: application/json" \
            -d '{"image":"'$IMAGE_TAG'"}'
